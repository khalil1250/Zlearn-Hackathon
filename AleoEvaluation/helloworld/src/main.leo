program informations_fi_c488db3cbc3f46d.aleo{

struct Float{
value:i128,
precision:u32,
}

struct is_Float {
    revenuAnnuel: bool,
    ebitda: bool,
    margeEbitda: bool,
    resultatNet: bool,
    margeNette: bool,
    cashFlowOperationnel: bool,
    cashFlowLibre: bool,
    capex: bool,
    opex: bool,
    ratioLiquiditeCourante: bool,
    ratioLiquiditeImmediat: bool,
    bfr: bool,
    dso: bool,
    dpo: bool,
    dureeCycleTresorerie: bool,
    returnOnAssets: bool,
    returnOnEquity: bool,
    ratioCouvertureInterets: bool,
    coutMoyenDette: bool,
    croissanceEBITDA: bool,
    variationStock: bool,
    ratioValorisationEVEBITDA: bool,
    cacl: bool,
    ltv: bool,
    ratioLTVCAC: bool,
    pourcentageR_DCA: bool,
    coutMO: bool,
    tauxMargeBrute: bool,
    ratioChargesFixesVariables: bool,
}

struct is_String {
    revenuAnnuel: bool,
    ebitda: bool,
    margeEbitda: bool,
    resultatNet: bool,
    margeNette: bool,
    cashFlowOperationnel: bool,
    cashFlowLibre: bool,
    capex: bool,
    opex: bool,
    ratioLiquiditeCourante: bool,
    ratioLiquiditeImmediat: bool,
    bfr: bool,
    dso: bool,
    dpo: bool,
    dureeCycleTresorerie: bool,
    returnOnAssets: bool,
    returnOnEquity: bool,
    ratioCouvertureInterets: bool,
    coutMoyenDette: bool,
    croissanceEBITDA: bool,
    variationStock: bool,
    ratioValorisationEVEBITDA: bool,
    cacl: bool,
    ltv: bool,
    ratioLTVCAC: bool,
    pourcentageR_DCA: bool,
    coutMO: bool,
    tauxMargeBrute: bool,
    ratioChargesFixesVariables: bool,
}

struct Informations_financieres {
    revenuAnnuel: u32,
    ebitda: u32,
    margeEbitda: Float,
    resultatNet: u32,
    margeNette: Float,
    cashFlowOperationnel: u32,
    cashFlowLibre: u32,
    capex: u32,
    opex: u32,
    ratioLiquiditeCourante: Float,
    ratioLiquiditeImmediat: Float,
    bfr: u32,
    dso: u32,
    dpo: u32,
    dureeCycleTresorerie: i32,
    returnOnAssets: Float,
    returnOnEquity: Float,
    ratioCouvertureInterets: Float,
    coutMoyenDette: Float,
    croissanceEBITDA: Float,
    variationStock: i32,
    ratioValorisationEVEBITDA: Float,
    cacl: u32,
    ltv: u32,
    ratioLTVCAC: Float,
    pourcentageR_DCA: Float,
    coutMO: u32,
    tauxMargeBrute: u32,
    ratioChargesFixesVariables: Float,
}

record Information {
    owner : address,
    info : Informations_financieres,
    is_float : is_Float,
    is_string: is_String,
    fieldsName : [field, 32u8],
}

transition emit_info(private receiver: address) -> Information { 
    let information : Informations_financieres = Informations_financieres { 
            revenuAnnuel: 8500000u32,
    ebitda: 1200000u32,
    margeEbitda: Float{value:14100i128, precision : 1000},
    resultatNet: 620000u32,
    margeNette: Float{value:7300i128, precision : 1000},
    cashFlowOperationnel: 900000u32,
    cashFlowLibre: 450000u32,
    capex: 220000u32,
    opex: 4700000u32,
    ratioLiquiditeCourante: Float{value:1600i128, precision : 1000},
    ratioLiquiditeImmediat: Float{value:1100i128, precision : 1000},
    bfr: 300000u32,
    dso: 47u32,
    dpo: 52u32,
    dureeCycleTresorerie: -5i32,
    returnOnAssets: Float{value:5400i128, precision : 1000},
    returnOnEquity: Float{value:11200i128, precision : 1000},
    ratioCouvertureInterets: Float{value:6800i128, precision : 1000},
    coutMoyenDette: Float{value:2300i128, precision : 1000},
    croissanceEBITDA: Float{value:10200i128, precision : 1000},
    variationStock: -15000i32,
    ratioValorisationEVEBITDA: Float{value:7500i128, precision : 1000},
    cacl: 1200u32,
    ltv: 9500u32,
    ratioLTVCAC: Float{value:7900i128, precision : 1000},
    pourcentageR_DCA: Float{value:3500i128, precision : 1000},
    coutMO: 2400000u32,
    tauxMargeBrute: 58u32,
    ratioChargesFixesVariables: Float{value:600i128, precision : 1000},
    }
    let is_float : is_Float = is_Float {
        revenuAnnuel:false,
ebitda:false,
margeEbitda:true,
resultatNet:false,
margeNette:true,
cashFlowOperationnel:false,
cashFlowLibre:false,
capex:false,
opex:false,
ratioLiquiditeCourante:true,
ratioLiquiditeImmediat:true,
bfr:false,
dso:false,
dpo:false,
dureeCycleTresorerie:false,
returnOnAssets:true,
returnOnEquity:true,
ratioCouvertureInterets:true,
coutMoyenDette:true,
croissanceEBITDA:true,
variationStock:false,
ratioValorisationEVEBITDA:true,
cacl:false,
ltv:false,
ratioLTVCAC:true,
pourcentageR&DCA:true,
coutMO:false,
tauxMargeBrute:false,
ratioChargesFixesVariables:true,
    }
    
    let is_string : is_String = is_String {
        revenuAnnuel:false,
ebitda:false,
margeEbitda:false,
resultatNet:false,
margeNette:false,
cashFlowOperationnel:false,
cashFlowLibre:false,
capex:false,
opex:false,
ratioLiquiditeCourante:false,
ratioLiquiditeImmediat:false,
bfr:false,
dso:false,
dpo:false,
dureeCycleTresorerie:false,
returnOnAssets:false,
returnOnEquity:false,
ratioCouvertureInterets:false,
coutMoyenDette:false,
croissanceEBITDA:false,
variationStock:false,
ratioValorisationEVEBITDA:false,
cacl:false,
ltv:false,
ratioLTVCAC:false,
pourcentageR&DCA:false,
coutMO:false,
tauxMargeBrute:false,
ratioChargesFixesVariables:false,
    }
    
    let res : Information = Information {
        owner : receiver,
        info : information,
        is_float : is_float,
        is_string : is_string,
        fieldsName : [35403951737739885303072908652, 111473350435937, 132233094266094786050286689, 138296632287671798515787124, 516535524476971463767141, 567363311991674884115643182070518995613662471532, 7873747653759295474433597272677, 426836518264, 1869636984, 42794894036889295115384209580985471412488021956523109, 42794894036889295115384209580985471844261784353071476, 6448754, 6583151, 6582383, 573518229574329688526271940479273367481279998309, 2320232781476075941845908253406323, 2320232781476075941850297743799417, 10955492873442877585981197599102906808079674190231598195, 2016789227147821441405922038805605, 132187753126732973804865139671773234241, 2401044873683328412209554389951339, 717979180954060583302701322634162887968204746570031401550913, 1667326828, 7107702, 138277760404593653315748163, 149452262583903736590815720845816906561, 109330363075919, 2360481000970144658078088171975781, 183802670324211780512267038456238319721454895641160153928852851],
    }
    
    return res;
    

}

}

